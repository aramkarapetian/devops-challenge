grafana:
  service:
    type: LoadBalancer
  persistence:
    enabled: true

prometheus-adapter:
  prometheus:
    url: http://infrastructure-prometheus-server
    port: 80
  rules:
    default: false
    custom:
      # - seriesQuery: '{namespace!="",__name__!~"^container_.*"}'
      #   seriesFilters: []
      #   resources:
      #     template: <<.Resource>>
      #   name:
      #     matches: ^(.*)_seconds_total$
      #     as: ""
      #   metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[5m])) by (<<.GroupBy>>)
      # - seriesQuery: '{__name__="travelaudience_prime_calculator_operations_ops$"}'
      #   resources:
      #     template: <<.Resource>>
      #   name:
      #     matches: ""
      #     as: "my_custom_metric"
      #   metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
      # - seriesQuery: 'travelaudience_prime_calculator_operations_ops'
      #   seriesFilters: []
      #   resources:
      #     overrides:
      #       namespace:
      #         resource: namespace
      #       pod_name:
      #         resource: pod
      #   name:
      #     matches: ""
      #     as: "travelaudience_prime_calculator_operations_ops"
      #   metricsQuery: sum(rate(<<.Series>>{<<.LabelMatchers>>}[3m])) by (<<.GroupBy>>)
      # - seriesQuery: '{__name__="travelaudience_prime_calculator_operations_ops"}'
      #   resources:
      #     template: <<.Resource>>
      #   name:
      #     matches: ""
      #     as: "travelaudience_prime_calculator_operations_ops"
      #   metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
      - seriesQuery: 'travelaudience_prime_calculator_operations_ops{kubernetes_namespace!="",kubernetes_pod_name!=""}'
        resources:
          overrides:
            kubernetes_namespace: {resource: "namespace"}
            kubernetes_pod_name: {resource: "pod"}
        name:
          matches: ""
          as: "ops"
        metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)'
    # external:
    #   - seriesQuery: '{__name__=~"^travelaudience_prime_calculator_operations_ops$"}'
    #     resources:
    #       template: <<.Resource>>
    #     name:
    #       matches: ""
    #       as: "my_external_metric"
    #     metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)